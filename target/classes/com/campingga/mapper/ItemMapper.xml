<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper

 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.campingga.mapper.ItemMapper">
   <!-- 리스트 컬럼 -->
   <sql id="cols">
      item_no, item_name, amount, content, price, regdate,
      category,
      status
   </sql>

   <!-- 신상품 8개 select -->
   <select id="selectNewItems" resultType="itemVO">
      SELECT
      i.item_no,
      i.item_name, i.amount, i.content, i.price, i.regdate, i.category,
      i.status,
      m.fileName
      FROM
      item AS i
      INNER JOIN
      item_image AS m ON i.item_no
      = m.item_no
      ORDER BY
      i.regdate DESC
      LIMIT 8;
   </select>


   <!-- 전체 리스트 select -->
   <select id="selectList" resultType="itemVO">
      select
      <include refid="cols" />
      from item
   </select>

   <!-- 검색기준으로 리스트 select -->
   <select id="selectListWithPaging" parameterType="criteria"
      resultType="itemVO">

      SELECT
      i.item_no, i.item_name, i.amount, i.price, i.category,
      m.fileName
      FROM (
      SELECT
      item_no,
      item_name,
      amount,
      price,
      category,
      ROW_NUMBER() OVER(ORDER BY regdate DESC) AS rownum
      FROM
      item
      <where>
         <!-- 카테고리 조건 -->
         <if test="category != null and category != ''">
            AND category LIKE #{category}
         </if>
         <!-- 키워드 조건 -->
         <if test="keyword != null and keyword != ''">
            AND item_name LIKE CONCAT('%', #{keyword}, '%')
         </if>
      </where>
      ) i
      LEFT JOIN item_image AS m ON i.item_no = m.item_no
      WHERE
    <![CDATA[
        rownum > (#{pageNum} - 1) * #{amount} AND
        rownum <= #{amount} * #{pageNum}
    ]]>
      ORDER BY
      rownum;

   </select>


   <!-- 검색기준 적용한 전체 상품 수 -->
   <select id="selectTotalCount" parameterType="criteria"
      resultType="int">
      select count(*) from item
      <where>
         <!-- 카테고리 조건 -->
         <if test="category != null and category != ''">
            AND category LIKE #{category}
         </if>
         <!-- 키워드 조건 -->
         <if test="keyword != null and keyword != ''">
            AND item_name LIKE CONCAT ('%',#{keyword},'%')
         </if>
      </where>
   </select>

   <select id="selectOneItem" parameterType="int"
      resultType="itemVO">
      select
      <include refid="cols" />
      from item
      where item_no = #{item_no}
   </select>



   <!-- 검색기준 적용한 전체 상품 수 -->
   <select id="countItem" parameterType="criteria" resultType="int">

      select count(*) from item

   </select>

   <!-- 리스트 select -->
   <select id="selectItem" parameterType="criteria"
      resultType="itemVO">
      SELECT
      ranked.item_no, ranked.item_name, ranked.amount, ranked.price, ranked.regdate,
      ranked.category,
      m.fileName
      FROM (
      SELECT
      item_no, item_name, amount, price, regdate, category,
      (@row_number:=@row_number + 1) AS row_num
      FROM
      item
      CROSS JOIN
      (SELECT @row_number := 0) AS rn
      ORDER BY
      regdate DESC
      ) AS ranked
      LEFT JOIN
      (SELECT item_no, fileName FROM item_image) AS m ON ranked.item_no = m.item_no
      ORDER BY
      ranked.regdate DESC
      LIMIT #{start}, #{cntPerPage}
   </select>


   <!-- 상품 수정 -->
   <update id="itemUpdate">
      UPDATE item SET
      item_name = #{item_name},
      amount =
      #{amount},
      content = #{content},
      price = #{price},
      category =
      #{category},
      status = #{status},
      regdate = NOW() -- 현재 시간으로 등록일 업데이트
      WHERE item_no = #{item_no}
   </update>
   <!-- 상품 삭제 -->
   <delete id="deleteItem" parameterType="int">
      delete from item where
      item_no=#{item_no}
   </delete>
</mapper>