/*
create database if not exists campingDB;
create user 'camp'@'%' identified by '12345';
grant all privileges on campingDB.* to 'camp'@'%';
flush privileges;
use campingDB;

-- create database campingDB;
*/

-- select user, host from mysql.user;

drop database if exists campingdb;
create database campingdb;
use campingdb;

drop table if exists member;

CREATE TABLE member(
	mem_id varchar(200) PRIMARY KEY,
	pwd varchar(300) NOT NULL,
	name varchar(100) NOT NULL,
	birth DATE NOT NULL,
	phone varchar(100) NOT NULL UNIQUE,
	gender varchar(50) NOT NULL,
	email varchar(100) NOT NULL,
    userStnum varchar(50) NOT NULL,
	userAddr varchar(300) NOT NULL,
	userDaddr varchar(200) NOT NULL, -- 상세주소
	regdate datetime DEFAULT current_timestamp,
	-- updatedate datetime DEFAULT current_timestamp ON UPDATE CURRENT_TIMESTAMP,
	mem_status enum('1', '2') DEFAULT '1' NOT NULL comment '1:정상 2:탈퇴'
);
desc member; -- member 테이블 구성 확인

INSERT INTO member (mem_id, pwd, name, birth, phone, gender, email, userStnum, userAddr, userDaddr, mem_status) VALUES 
('user003', 'securePass123', '이민호', '1988-06-22', '010-3456-7890', '남성', 'minho88@example.com', '12345', '서울특별시 서대문구 충정로', '서울아파트 504호', '1'),
('user004', 'myPassword456', '박서준', '1990-07-16', '010-4567-8901', '남성', 'seojun90@example.com', '67890', '경기도 수원시 팔달구 인계동', '수원빌라 201호', '1'),
('user005', 'helloWorld789', '김지원', '1992-09-04', '010-5678-9012', '여성', 'jiwon92@example.com', '23456', '부산광역시 남구 대연동', '부산타워 331호', '1'),
('user006', 'passwordHello123', '손예진', '1984-01-11', '010-6789-0123', '여성', 'yejin84@example.com', '78901', '인천광역시 남동구 구월동', '인천아파트 1202호', '1'),
('user007', 'qwertyAsdfg123', '정해인', '1989-04-01', '010-7890-1234', '남성', 'haein89@example.com', '34567', '대전광역시 서구 둔산동', '대전하우스 401호', '1');

select * from member;

delete from member;

select count(*) from member;


/*--------------------------------
등급 테이블 authority(

 아이디	
 권한 
 참조 - 아이디는 회원 테이블의 아이디로 

)
*/
drop table if exists authority;

-- 권한테이블
CREATE TABLE authority(
   auth_id int auto_increment primary key,
   mem_id varchar(100) NOT NULL,
   auth varchar(50) NOT NULL
);
-- alter table authority add CONSTRAINT fk_authority FOREIGN KEY(mem_id)REFERENCES member(mem_id);

select * from authority;

insert into authority (mem_id, auth)
values ('dw', 'ROLE_ADMIN');

/*--------------------------
상품 테이블 item(
 상품번호
 상품명
 판매가
 등록일
 카테고리
)
*/

drop table if exists item;

-- 상품테이블
CREATE TABLE item(
  item_no INT AUTO_INCREMENT PRIMARY KEY,
  item_name VARCHAR(100) NOT null unique,
  amount INT NOT NULL,
  content TEXT,
  price INT NOT NULL,
  regdate DATETIME DEFAULT CURRENT_TIMESTAMP,
  category VARCHAR(100) NOT NULL,
  status ENUM ('1', '2') default '1' NOT NULL COMMENT '1:판매중 2:품절'
);

desc item;
select * from item;
delete from item;

-- 리뷰테이블
drop table if exists review;

CREATE TABLE review(
	rev_no int AUTO_INCREMENT PRIMARY KEY,
	item_no int,
	writer varchar(100) NOT NULL,
	content varchar(200) NOT NULL,
	score int NOT NULL,
	regdate datetime DEFAULT current_timestamp
);
-- alter table authority add CONSTRAINT fk_review FOREIGN KEY(item_no)REFERENCES item(item_no);
desc review;
select * from review;

insert into review(item_no, writer, content, score) values
(1, 'user003', '정말 좋아요', 5),
(1, 'user004', '괜춘한듯?', 4),
(1, 'user005', '보통....', 3),
(1, 'user006', '좋은지 잘...', 2),
(1, 'user007', '글쎄요', 1);

/*----------------------------
주문 테이블 orderList(
 주문번호
 상품명 
 구매가
 구매자아이디
 구매날짜
 배송현황
 !상품명, 구매가는 상품테이블을 참조하게 만들 예정(보류)
)
*/
DROP table if exists orderList;

-- 주문테이블(구매페이지, 주문관리페이지에서 사용)
CREATE TABLE orderList(
  cart_no INT not null,
  ord_no VARCHAR(255),
  item_no int NOT NULL,
  -- price INT NOT NULL, (item 테이블 inner join으로 가져올 수 있음)
  mem_id varchar(100) NOT NULL, -- 컬럼 명을 수정했습니다.
  amount int not null, -- 수량
  name varchar(100) not null,
  phone varchar(100) not null,
  stnum VARCHAR(50) not null, -- 지번 
  userAddr VARCHAR(300) not null, -- 주소
  userDaddr VARCHAR(200) not null, -- 상세주소
  regdate DATETIME DEFAULT CURRENT_TIMESTAMP,
  d_memo VARCHAR(255), -- 배송메모
  -- 기본값 '결제완료'로 들어가게끔 수정
  status ENUM('1', '2', '3', '4') default '1' NOT null COMMENT '1:결제완료 2:배송준비 3:배송중 4:배송완료'
);

-- ALTER TABLE orderList ADD CONSTRAINT FOREIGN KEY (item_no) REFERENCES item(item_no);
desc orderList;

select * from orderList;

/*----------------------
장바구니 테이블 cart(
 상품이미지
 상품명
 가격
 수량
 !상품명, 가격은 상품테이블을 참조하게 만들 예정(보류)
)
*/

drop table if exists cart;

CREATE TABLE cart(
 cart_no int AUTO_INCREMENT primary key, -- 장바구니 정렬 용도로 사용
 member_id varchar(100) not null,
 item_img varchar(200),
 item_no int NOT null,
 quantity INT NOT null
);

-- ALTER TABLE cart ADD CONTSTRAINT FOREIGN KEY (item_no) REFERENCES item(item_no)
desc cart;
select * from cart;


/*------------------------
결제 테이블 buy(
 상품이미지
 상품명
 가격
 주문일
 주문상태 결제완료/ 배송준비 / 배송중 / 배송완료
)
*/

/*
drop table if exists bill;
create table bill(
 item_img varchar(200) not NULL,
 item_no INT NOT NULL,
 price INT NOT NULL,
 regdate DATETIME DEFAULT CURRENT_TIMESTAMP,
 imp_uid varchar(45) NOT NULL,
 valid tinyint NOT NULL DEFAULT '1' COMMENT 'status. 1: 확인 대기, 2: 검증 완료, 3: 위조 혹은 변조 발생하여 강제취소',
 status ENUM ('1', '2', '3', '4') NOT NULL COMMENT '1:결제완료 2:배송준비 3:배송중 4:배송완료'
);

-- ALTER TABLE bill ADD CONSTRAINT FOREIGN KEY (item_no) REFERENCES item(item_no);
desc bill;
select * from bill;

*/

-- 상품 이미지 저장 방식 정하기(장바구니 페이지, 결제페이지) / 참조 확립 ----> 해결!!
drop table if exists item_image;

create table item_image(
    item_no int NOT NULL,
    fileName varchar(100) not null,
    uploadPath varchar(200) not null,
    uuid varchar(100)not null ,
    primary key (uuid)
);
-- ALTER TABLE item_image ADD CONSTRAINT FOREIGN KEY (item_no) REFERENCES item(item_no);
desc item_image;
select * from item_image;

	SELECT i.*, m.fileName
		FROM item i
		INNER JOIN item_image m ON i.item_no = m.item_no;

delete from item_image;