<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campingga.mapper.MemberMapper">
	<!-- 회원가입 -->
	<insert id="memberJoin"
		parameterType="com.campingga.domain.MemberVO">
		INSERT INTO member (mem_id, pwd, name, birth, phone,
		gender, email,
		userStnum, userAddr, userDaddr)
		VALUES (#{mem_id},
		#{pwd}, #{name}, #{birth}, #{phone}, #{gender}, #{email},
		#{userStnum}, #{userAddr}, #{userDaddr})
	</insert>

	<!-- 아이디 중복검사 -->
	<select id="idCheck" resultType="int">

		select count(*) from member
		where mem_id = #{mem_id}

	</select>

	<!-- 로그인 -->
	<select id="memberLogin"
		resultType="com.campingga.domain.MemberVO">

		select * from member where mem_id = #{mem_id} and pwd =
		#{pwd}

	</select>

	<!-- 목록조회 -->
	<select id="getList" resultType="com.campingga.domain.MemberVO">

		select * from member

	</select>

	<!-- 검색기준 적용한 전체 상품 수 -->
	<select id="countMember" parameterType="criteria"
		resultType="int">

		select count(*) from member

	</select>

	<!-- 목록 조회 - 페이징 처리 -->
	<select id="selectMember" parameterType="criteria"
		resultType="com.campingga.domain.MemberVO">

		SELECT mem_id, name, email, phone, regdate, mem_status
		FROM (
		SELECT mem_id, name, email, phone, regdate, mem_status,
		(@row_number:=@row_number + 1) AS row_num
		FROM member
		CROSS JOIN (SELECT @row_number := 0) AS rn
		ORDER BY regdate DESC
		) AS ranked
		ORDER BY regdate DESC
		LIMIT #{start}, #{cntPerPage}


	</select>
	
	<resultMap type="MemberVO" id="memberMap">
	    <id property="mem_id" column="mem_id"/>
	    <result property="mem_id" column="mem_id"/>
	    <result property="pwd" column="pwd"/>
	    <result property="name" column="name"/>
	    <result property="regdate" column="regdate"/>
	    <collection property="authList" resultMap="authMap">
	    </collection> 
	</resultMap>
  
	<resultMap type="Authority" id="authMap">
	    <result property="mem_id" column="mem_id"/>
	    <result property="auth" column="auth"/>
	</resultMap>
	
	<select id="read" resultMap="memberMap">
	      SELECT
	        m.mem_id,  pwd, name, regdate, auth
	      FROM
	        member m LEFT OUTER JOIN authority a on m.mem_id = a.mem_id
	      WHERE m.mem_id = #{member_id}
	</select>
	
	<insert id="insertAuth" parameterType="Authority">
		insert into authority (mem_id, auth)
		values (#{mem_id}, #{auth})
	</insert>


</mapper>

	